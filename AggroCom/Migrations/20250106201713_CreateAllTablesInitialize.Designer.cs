// <auto-generated />
using System;
using AggroCom.Brokers.Storages;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AggroCom.Migrations
{
    [DbContext(typeof(StorageBroker))]
    [Migration("20250106201713_CreateAllTablesInitialize")]
    partial class CreateAllTablesInitialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AggroCom.Models.Foundations.Contacts.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.Katalogs.Katalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Katalogs");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.News.New", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DesRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribtionRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescribtionUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleUz")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.Photos.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductOnes.ProductOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KimyoviySinfiRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KimyoviySinfiUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparatShakliRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparatShakliUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<string>("QadogiRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QadogiUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasirModdaRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TasirModdaUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleUz")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductOnes");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductOnes.TableOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BegonaQarshiRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BegonaQarshiUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirgaSarfRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirgaSarfUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EkinTuriRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EkinTuriUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Onlsum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductOneId")
                        .HasColumnType("int");

                    b.Property<string>("SarfMeyoriRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarfMeyoriUz")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductOneId");

                    b.ToTable("TableOnes");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductTwos.ProductTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DesRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionUZ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductIcon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTwoType")
                        .HasColumnType("int");

                    b.Property<string>("SarfRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SarfUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleUz")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductTwos");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductTwos.TableTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Foiz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameRu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameUz")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductTwoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductTwoId");

                    b.ToTable("TableTwos");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductOnes.TableOne", b =>
                {
                    b.HasOne("AggroCom.Models.Foundations.ProductOnes.ProductOne", null)
                        .WithMany("TableOnes")
                        .HasForeignKey("ProductOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductTwos.TableTwo", b =>
                {
                    b.HasOne("AggroCom.Models.Foundations.ProductTwos.ProductTwo", null)
                        .WithMany("TableTwos")
                        .HasForeignKey("ProductTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductOnes.ProductOne", b =>
                {
                    b.Navigation("TableOnes");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductTwos.ProductTwo", b =>
                {
                    b.Navigation("TableTwos");
                });
#pragma warning restore 612, 618
        }
    }
}
