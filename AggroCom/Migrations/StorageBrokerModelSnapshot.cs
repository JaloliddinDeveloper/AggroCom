// <auto-generated />
using AggroCom.Brokers.Storages;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AggroCom.Migrations
{
    [DbContext(typeof(StorageBroker))]
    partial class StorageBrokerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductOnes.ProductOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductOnes");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductOnes.TableOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductOneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductOneId");

                    b.ToTable("TableOnes");
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductOnes.TableOne", b =>
                {
                    b.HasOne("AggroCom.Models.Foundations.ProductOnes.ProductOne", null)
                        .WithMany("TableOnes")
                        .HasForeignKey("ProductOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AggroCom.Models.Foundations.ProductOnes.ProductOne", b =>
                {
                    b.Navigation("TableOnes");
                });
#pragma warning restore 612, 618
        }
    }
}
